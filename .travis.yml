language: python
python:
  - "2.7"
env:
  - ACTION=test
  - ACTION=deploy
  - ACTION=integration
  - ACTION=codestyle


matrix:
  allow_failures:
    - env: ACTION=integration


cache:
  - apt

dist: trusty
sudo: required

services:
  - postgresql

addons:
  postgresql: "9.5"

apt:
  packages:
    - postgresql-9.5-postgis-2.3

before_script:
  - sudo apt-get update
  - sudo apt-get install postgresql-9.5-postgis-2.3
  - psql -c "CREATE DATABASE geotrekdb ENCODING 'UTF8' TEMPLATE template0;" -U postgres
  - psql -c 'CREATE EXTENSION postgis;' -U postgres -d geotrekdb
  - psql -c "CREATE USER geotrek WITH PASSWORD 'geotrek';" -U postgres
  # django tests require to be superuser to create test db with postgis extension
  - if [[ $ACTION == test ]]; then psql -c "ALTER USER geotrek SUPERUSER;" -U postgres; fi
  - psql -c 'GRANT ALL PRIVILEGES ON DATABASE geotrekdb TO geotrek;' -U postgres
  - psql -c 'GRANT ALL ON spatial_ref_sys,geometry_columns,raster_columns TO geotrek;' -U postgres -d geotrekdb
  # GDAL-fix -- End (remove with Ubuntu 14.04)

  # Enable experimental features during navigation tests
  - sed -i "s/experimental = False/experimental = True/" etc/settings.ini

install:
  - if [[ $ACTION != codestyle ]]; then deactivate; fi
  - if [[ $ACTION == codestyle ]]; then pip install flake8; fi
  - if [[ $ACTION == test ]]; then ./install.sh --tests || cat ./install.log; fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then ./install.sh --noinput || cat ./install.log; fi
script:
  - if [[ $ACTION == codestyle ]]; then flake8 --exclude "" --ignore=E501,F403,F405 geotrek/settings; fi
  - if [[ $ACTION == codestyle ]]; then flake8 geotrek; fi
  - if [[ $ACTION == codestyle ]]; then find geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID; fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then make load_demo; fi
  - if [[ $ACTION == deploy ]]; then make test_nav host=localhost port=80; fi
  - if [[ $ACTION == integration ]]; then make test_export host=localhost port=80; fi
  - if [[ $ACTION == test ]]; then make env_test test; fi
  - if [[ $ACTION == test ]]; then make test_js; fi
  # Re-run for coverage
  - if [[ $ACTION == test ]]; then rm -rf ./var/cache/* ./var/media/maps/*; fi
  - if [[ $ACTION == test ]]; then ./bin/coverage run ./bin/django test geotrek; fi
after_success:
  # Report coverage results to coveralls.io
  - if [[ $ACTION == test ]]; then ./bin/coverage report -m; fi
  - if [[ $ACTION == test ]]; then sudo pip install coveralls; fi
  - if [[ $ACTION == test ]]; then coveralls; fi

after_failure:
  - cat install.log
  - cat var/log/geotrek.log
  - cat var/log/nginx-access.log
  - cat var/log/nginx-error.log
  - cat var/log/supervisord.log

notifications:
  irc: "irc.freenode.org#geotrek"
